TYPE
  LOGLEVEL : (CRITICAL, WARNING, INFO, DEBUG) := INFO;
END_TYPE

FUNCTION_BLOCK LOGGER
  VAR_INPUT
    TRIG : BOOL;
    MSG : STRING;
    LEVEL : LOGLEVEL := INFO;
  END_VAR
  VAR
    TRIG0 : BOOL;
  END_VAR

  IF TRIG AND NOT TRIG0 THEN
  {{
   LogMessage(GetFbVar(LEVEL),(char*)GetFbVar(MSG, .body),GetFbVar(MSG, .len));
  }}
  END_IF;
  TRIG0:=TRIG;
END_FUNCTION_BLOCK



FUNCTION_BLOCK python_eval
  VAR_INPUT
    TRIG : BOOL;
    CODE : STRING;
  END_VAR
  VAR_OUTPUT
    ACK : BOOL;
    RESULT : STRING;
  END_VAR
  VAR
    STATE : DWORD;
    BUFFER : STRING;
    PREBUFFER : STRING;
    TRIGM1 : BOOL;
    TRIGGED : BOOL;
  END_VAR

  {extern void __PythonEvalFB(int, PYTHON_EVAL*);__PythonEvalFB(0, data__);}
END_FUNCTION_BLOCK

FUNCTION_BLOCK python_poll
  VAR_INPUT
    TRIG : BOOL;
    CODE : STRING;
  END_VAR
  VAR_OUTPUT
    ACK : BOOL;
    RESULT : STRING;
  END_VAR
  VAR
    STATE : DWORD;
    BUFFER : STRING;
    PREBUFFER : STRING;
    TRIGM1 : BOOL;
    TRIGGED : BOOL;
  END_VAR

  {extern void __PythonEvalFB(int, PYTHON_EVAL*);__PythonEvalFB(1,(PYTHON_EVAL*)(void*)data__);}
END_FUNCTION_BLOCK

FUNCTION_BLOCK python_gear
  VAR_INPUT
    N : UINT;
    TRIG : BOOL;
    CODE : STRING;
  END_VAR
  VAR_OUTPUT
    ACK : BOOL;
    RESULT : STRING;
  END_VAR
  VAR
    py_eval : python_eval;
    COUNTER : UINT;
    _TMP_ADD10_OUT : UINT;
    _TMP_EQ13_OUT : BOOL;
    _TMP_SEL15_OUT : UINT;
    _TMP_AND7_OUT : BOOL;
  END_VAR

  _TMP_ADD10_OUT := ADD(COUNTER, 1);
  _TMP_EQ13_OUT := EQ(N, _TMP_ADD10_OUT);
  _TMP_SEL15_OUT := SEL(_TMP_EQ13_OUT, _TMP_ADD10_OUT, 0);
  COUNTER := _TMP_SEL15_OUT;
  _TMP_AND7_OUT := AND(_TMP_EQ13_OUT, TRIG);
  py_eval(TRIG := _TMP_AND7_OUT, CODE := CODE);
  ACK := py_eval.ACK;
  RESULT := py_eval.RESULT;
END_FUNCTION_BLOCK


PROGRAM WaterIrrigation
  VAR
    OUTGOING_VALVE : BOOL;
    INCOMING_VALVE : BOOL;
    OUTGOING_PUMP : BOOL;
    INCOMING_PUMP : BOOL;
    TANK_FULL : BOOL;
    PULSE : BOOL;
    MAX_TANK_LEVEL : INT := 10;
    TANK_LEVEL_VALUE : INT := 10;
  END_VAR
  VAR
    CTD0 : CTD;
    CTU0 : CTU;
    TON0 : TON;
    TOF0 : TOF;
    TP0 : TP;
    R_TRIG1 : R_TRIG;
    R_TRIG2 : R_TRIG;
  END_VAR

  TP0(IN := OUTGOING_VALVE, PT := T#10000ms);
  OUTGOING_PUMP := TP0.Q;
  R_TRIG1(CLK := PULSE AND OUTGOING_PUMP);
  CTD0(CD := R_TRIG1.Q, LD := TANK_FULL, PV := MAX_TANK_LEVEL);
  INCOMING_PUMP := CTD0.Q;
  TANK_LEVEL_VALUE := CTD0.CV;
  R_TRIG2(CLK := PULSE AND INCOMING_PUMP);
  CTU0(CU := R_TRIG2.Q, R := OUTGOING_PUMP, PV := MAX_TANK_LEVEL);
  TANK_FULL := CTU0.Q;
  TANK_LEVEL_VALUE := CTU0.CV;
  TON0(IN := NOT(PULSE), PT := T#500ms);
  TOF0(IN := TON0.Q, PT := T#500ms);
  PULSE := TOF0.Q;
END_PROGRAM


CONFIGURATION Config0

  RESOURCE Res0 ON PLC
    TASK task0(INTERVAL := T#20ms,PRIORITY := 0);
    PROGRAM instance0 WITH task0 : WaterIrrigation;
  END_RESOURCE
END_CONFIGURATION
